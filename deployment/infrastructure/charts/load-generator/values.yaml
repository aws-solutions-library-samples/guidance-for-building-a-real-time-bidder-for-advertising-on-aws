# Default values for load-generator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Load generator arguments.
duration: "6s"
timeout: "100ms"
startDelay: "1s"
devicesUsed: 1000000000
ratePerJob: 100
workers: 4096
enableProfiler: false
# These three are used only when enableProfiler is true.
profilerOutput: "pprof-{{.Endpoint}}-{{.Hostname}}"
profilerBucket: "aws-bidder-benchmark-files"
profilerUrl: http://bidder-internal:8091/debug/pprof/
trackErrors: true

# Target options (in order of precedence).
targets:
  # Dynamic targets generation.
  dynamic:
    count: 0
    template: "https://{{ .Values.stackName }}{{ .suffix }}.us-east-1.ab.clearcode.cc/bidrequest"
    suffixTemplate: "{{- if gt .index 0 -}}-{{ add1 .index }}{{ end }}"

  # Static list of target URLs.
  static: []

# Single target URL.
target: https://us-east-1.ab.clearcode.cc/bidrequest

# Job parameters.
numberOfJobs: 1
awsRegion: us-west-2
stackName: ""

image:
  # Set this to ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
  registry: ""
  # Repository within the ECR registry.
  repository: load-generator
  # Pull policy is determine in the following way: 1) if specified here, the value is used; 2) if the tag is 'latest',
  # the pull policy is Always (since the latest tag changes), 3) otherwise IfNotPresent is used (since the tag likely
  # corresponds to a git commit hash or a git tag that does not change in our repo).
  # pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 3000 # to be able to read Kubernetes and AWS token files

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  limits:
#    cpu: 59000m
#    memory: 200000Mi
#  requests:
#    cpu: 59000m
#    memory: 200000Mi

nodeSelector:
  pool: benchmark

# Wait until target is available.
# Deploys initial container that holds on the load generator until the target is available.
waitForService:
  enable: true
  # This image is within our ECR registry.
  image: alpine:3.12.2
  healthCheckPath: /healthz
